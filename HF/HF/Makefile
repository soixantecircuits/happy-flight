# Makefile.in generated by automake 1.10 from Makefile.am.
# HF/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/hf
pkglibdir = $(libdir)/hf
pkgincludedir = $(includedir)/hf
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i386-apple-darwin11.1.0
host_triplet = i386-apple-darwin11.1.0
bin_PROGRAMS = HF$(EXEEXT)
subdir = HF
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_HF_OBJECTS = HF-background.$(OBJEXT) HF-item.$(OBJEXT) \
	HF-items.$(OBJEXT) HF-font.$(OBJEXT) HF-game.$(OBJEXT) \
	HF-geometry.$(OBJEXT) HF-plane.$(OBJEXT) \
	HF-PrefsManager.$(OBJEXT) HF-mainOS.$(OBJEXT) \
	HF-surfaceDB.$(OBJEXT) HF-SDLMain.$(OBJEXT) HF-video.$(OBJEXT)
HF_OBJECTS = $(am_HF_OBJECTS)
HF_DEPENDENCIES =
HF_LINK = $(CXXLD) $(HF_CXXFLAGS) $(CXXFLAGS) $(HF_LDFLAGS) $(LDFLAGS) \
	-o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
OBJCCOMPILE = $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS)
OBJCLD = $(OBJC)
OBJCLINK = $(OBJCLD) $(AM_OBJCFLAGS) $(OBJCFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(HF_SOURCES)
DIST_SOURCES = $(HF_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Users/emmanuel/Documents/Soixante/projets/happyFlight/realisation/happy-flight/HF/missing --run aclocal-1.10
AMTAR = ${SHELL} /Users/emmanuel/Documents/Soixante/projets/happyFlight/realisation/happy-flight/HF/missing --run tar
AUTOCONF = ${SHELL} /Users/emmanuel/Documents/Soixante/projets/happyFlight/realisation/happy-flight/HF/missing --run autoconf
AUTOHEADER = ${SHELL} /Users/emmanuel/Documents/Soixante/projets/happyFlight/realisation/happy-flight/HF/missing --run autoheader
AUTOMAKE = ${SHELL} /Users/emmanuel/Documents/Soixante/projets/happyFlight/realisation/happy-flight/HF/missing --run automake-1.10
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /Users/emmanuel/Documents/Soixante/projets/happyFlight/realisation/happy-flight/HF/missing --run makeinfo
MKDIR_P = .././install-sh -c -d
OBJC = gcc
OBJCDEPMODE = depmode=gcc3
OBJCFLAGS = -g -O2
OBJEXT = o
OPENGL_LIBS = -lGL
PACKAGE = hf
PACKAGE_BUGREPORT = bug-report@soixantecircuits.fr
PACKAGE_NAME = HF
PACKAGE_STRING = HF 0.1
PACKAGE_TARNAME = hf
PACKAGE_VERSION = 0.1
PATH_SEPARATOR = :
R_OS = darwin11.1.0
R_PLATFORM = i386-apple-darwin11.1.0
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VERSION = 0.1
abs_builddir = /Users/emmanuel/Documents/Soixante/projets/happyFlight/realisation/happy-flight/HF/HF
abs_srcdir = /Users/emmanuel/Documents/Soixante/projets/happyFlight/realisation/happy-flight/HF/HF
abs_top_builddir = /Users/emmanuel/Documents/Soixante/projets/happyFlight/realisation/happy-flight/HF
abs_top_srcdir = /Users/emmanuel/Documents/Soixante/projets/happyFlight/realisation/happy-flight/HF
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_OBJC = gcc
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i386-apple-darwin11.1.0
build_alias = 
build_cpu = i386
build_os = darwin11.1.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i386-apple-darwin11.1.0
host_alias = 
host_cpu = i386
host_os = darwin11.1.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /Users/emmanuel/Documents/Soixante/projets/happyFlight/realisation/happy-flight/HF/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(top_builddir)/./install-sh -c -d
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_builddir = ..
top_srcdir = ..
AM_CXXFLAGS = -g
HF_SOURCES = background.h		    background.cpp \
					item.h		    		item.cpp \
					items.h		    		items.cpp \
					font.h		    		font.cpp \
					game.h		    		game.cpp \
					geometry.h		    	geometry.cpp \
					plane.h		    		plane.cpp \
					PrefsManager.h		    PrefsManager.cpp \
					Singleton.h				mainOS.cpp \
					surfaceDB.h		    	surfaceDB.cpp \
					SDLMain.h		    	SDLMain.m \
					video.h		    		video.cpp

HF_CXXFLAGS = -D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS -I/Library/Frameworks/SDL.framework/Headers -I/Library/Frameworks/SDL_image.framework/Headers -I/System/Library/Frameworks/OpenGL.framework/Headers
HF_OBJCFLAGS = -I/Library/Frameworks/SDL.framework/Headers -I/Library/Frameworks/SDL_image.framework/Headers -I/System/Library/Frameworks/OpenGL.framework/Headers
HF_LDADD = 
HF_LDFLAGS = -framework SDL -framework SDL_image -framework Cocoa -framework OpenGL
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .m .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  HF/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  HF/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
HF$(EXEEXT): $(HF_OBJECTS) $(HF_DEPENDENCIES) 
	@rm -f HF$(EXEEXT)
	$(HF_LINK) $(HF_OBJECTS) $(HF_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/HF-PrefsManager.Po
include ./$(DEPDIR)/HF-SDLMain.Po
include ./$(DEPDIR)/HF-background.Po
include ./$(DEPDIR)/HF-font.Po
include ./$(DEPDIR)/HF-game.Po
include ./$(DEPDIR)/HF-geometry.Po
include ./$(DEPDIR)/HF-item.Po
include ./$(DEPDIR)/HF-items.Po
include ./$(DEPDIR)/HF-mainOS.Po
include ./$(DEPDIR)/HF-plane.Po
include ./$(DEPDIR)/HF-surfaceDB.Po
include ./$(DEPDIR)/HF-video.Po

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

HF-background.o: background.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_CXXFLAGS) $(CXXFLAGS) -MT HF-background.o -MD -MP -MF $(DEPDIR)/HF-background.Tpo -c -o HF-background.o `test -f 'background.cpp' || echo '$(srcdir)/'`background.cpp
	mv -f $(DEPDIR)/HF-background.Tpo $(DEPDIR)/HF-background.Po
#	source='background.cpp' object='HF-background.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_CXXFLAGS) $(CXXFLAGS) -c -o HF-background.o `test -f 'background.cpp' || echo '$(srcdir)/'`background.cpp

HF-background.obj: background.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_CXXFLAGS) $(CXXFLAGS) -MT HF-background.obj -MD -MP -MF $(DEPDIR)/HF-background.Tpo -c -o HF-background.obj `if test -f 'background.cpp'; then $(CYGPATH_W) 'background.cpp'; else $(CYGPATH_W) '$(srcdir)/background.cpp'; fi`
	mv -f $(DEPDIR)/HF-background.Tpo $(DEPDIR)/HF-background.Po
#	source='background.cpp' object='HF-background.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_CXXFLAGS) $(CXXFLAGS) -c -o HF-background.obj `if test -f 'background.cpp'; then $(CYGPATH_W) 'background.cpp'; else $(CYGPATH_W) '$(srcdir)/background.cpp'; fi`

HF-item.o: item.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_CXXFLAGS) $(CXXFLAGS) -MT HF-item.o -MD -MP -MF $(DEPDIR)/HF-item.Tpo -c -o HF-item.o `test -f 'item.cpp' || echo '$(srcdir)/'`item.cpp
	mv -f $(DEPDIR)/HF-item.Tpo $(DEPDIR)/HF-item.Po
#	source='item.cpp' object='HF-item.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_CXXFLAGS) $(CXXFLAGS) -c -o HF-item.o `test -f 'item.cpp' || echo '$(srcdir)/'`item.cpp

HF-item.obj: item.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_CXXFLAGS) $(CXXFLAGS) -MT HF-item.obj -MD -MP -MF $(DEPDIR)/HF-item.Tpo -c -o HF-item.obj `if test -f 'item.cpp'; then $(CYGPATH_W) 'item.cpp'; else $(CYGPATH_W) '$(srcdir)/item.cpp'; fi`
	mv -f $(DEPDIR)/HF-item.Tpo $(DEPDIR)/HF-item.Po
#	source='item.cpp' object='HF-item.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_CXXFLAGS) $(CXXFLAGS) -c -o HF-item.obj `if test -f 'item.cpp'; then $(CYGPATH_W) 'item.cpp'; else $(CYGPATH_W) '$(srcdir)/item.cpp'; fi`

HF-items.o: items.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_CXXFLAGS) $(CXXFLAGS) -MT HF-items.o -MD -MP -MF $(DEPDIR)/HF-items.Tpo -c -o HF-items.o `test -f 'items.cpp' || echo '$(srcdir)/'`items.cpp
	mv -f $(DEPDIR)/HF-items.Tpo $(DEPDIR)/HF-items.Po
#	source='items.cpp' object='HF-items.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_CXXFLAGS) $(CXXFLAGS) -c -o HF-items.o `test -f 'items.cpp' || echo '$(srcdir)/'`items.cpp

HF-items.obj: items.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_CXXFLAGS) $(CXXFLAGS) -MT HF-items.obj -MD -MP -MF $(DEPDIR)/HF-items.Tpo -c -o HF-items.obj `if test -f 'items.cpp'; then $(CYGPATH_W) 'items.cpp'; else $(CYGPATH_W) '$(srcdir)/items.cpp'; fi`
	mv -f $(DEPDIR)/HF-items.Tpo $(DEPDIR)/HF-items.Po
#	source='items.cpp' object='HF-items.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_CXXFLAGS) $(CXXFLAGS) -c -o HF-items.obj `if test -f 'items.cpp'; then $(CYGPATH_W) 'items.cpp'; else $(CYGPATH_W) '$(srcdir)/items.cpp'; fi`

HF-font.o: font.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_CXXFLAGS) $(CXXFLAGS) -MT HF-font.o -MD -MP -MF $(DEPDIR)/HF-font.Tpo -c -o HF-font.o `test -f 'font.cpp' || echo '$(srcdir)/'`font.cpp
	mv -f $(DEPDIR)/HF-font.Tpo $(DEPDIR)/HF-font.Po
#	source='font.cpp' object='HF-font.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_CXXFLAGS) $(CXXFLAGS) -c -o HF-font.o `test -f 'font.cpp' || echo '$(srcdir)/'`font.cpp

HF-font.obj: font.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_CXXFLAGS) $(CXXFLAGS) -MT HF-font.obj -MD -MP -MF $(DEPDIR)/HF-font.Tpo -c -o HF-font.obj `if test -f 'font.cpp'; then $(CYGPATH_W) 'font.cpp'; else $(CYGPATH_W) '$(srcdir)/font.cpp'; fi`
	mv -f $(DEPDIR)/HF-font.Tpo $(DEPDIR)/HF-font.Po
#	source='font.cpp' object='HF-font.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_CXXFLAGS) $(CXXFLAGS) -c -o HF-font.obj `if test -f 'font.cpp'; then $(CYGPATH_W) 'font.cpp'; else $(CYGPATH_W) '$(srcdir)/font.cpp'; fi`

HF-game.o: game.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_CXXFLAGS) $(CXXFLAGS) -MT HF-game.o -MD -MP -MF $(DEPDIR)/HF-game.Tpo -c -o HF-game.o `test -f 'game.cpp' || echo '$(srcdir)/'`game.cpp
	mv -f $(DEPDIR)/HF-game.Tpo $(DEPDIR)/HF-game.Po
#	source='game.cpp' object='HF-game.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_CXXFLAGS) $(CXXFLAGS) -c -o HF-game.o `test -f 'game.cpp' || echo '$(srcdir)/'`game.cpp

HF-game.obj: game.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_CXXFLAGS) $(CXXFLAGS) -MT HF-game.obj -MD -MP -MF $(DEPDIR)/HF-game.Tpo -c -o HF-game.obj `if test -f 'game.cpp'; then $(CYGPATH_W) 'game.cpp'; else $(CYGPATH_W) '$(srcdir)/game.cpp'; fi`
	mv -f $(DEPDIR)/HF-game.Tpo $(DEPDIR)/HF-game.Po
#	source='game.cpp' object='HF-game.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_CXXFLAGS) $(CXXFLAGS) -c -o HF-game.obj `if test -f 'game.cpp'; then $(CYGPATH_W) 'game.cpp'; else $(CYGPATH_W) '$(srcdir)/game.cpp'; fi`

HF-geometry.o: geometry.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_CXXFLAGS) $(CXXFLAGS) -MT HF-geometry.o -MD -MP -MF $(DEPDIR)/HF-geometry.Tpo -c -o HF-geometry.o `test -f 'geometry.cpp' || echo '$(srcdir)/'`geometry.cpp
	mv -f $(DEPDIR)/HF-geometry.Tpo $(DEPDIR)/HF-geometry.Po
#	source='geometry.cpp' object='HF-geometry.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_CXXFLAGS) $(CXXFLAGS) -c -o HF-geometry.o `test -f 'geometry.cpp' || echo '$(srcdir)/'`geometry.cpp

HF-geometry.obj: geometry.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_CXXFLAGS) $(CXXFLAGS) -MT HF-geometry.obj -MD -MP -MF $(DEPDIR)/HF-geometry.Tpo -c -o HF-geometry.obj `if test -f 'geometry.cpp'; then $(CYGPATH_W) 'geometry.cpp'; else $(CYGPATH_W) '$(srcdir)/geometry.cpp'; fi`
	mv -f $(DEPDIR)/HF-geometry.Tpo $(DEPDIR)/HF-geometry.Po
#	source='geometry.cpp' object='HF-geometry.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_CXXFLAGS) $(CXXFLAGS) -c -o HF-geometry.obj `if test -f 'geometry.cpp'; then $(CYGPATH_W) 'geometry.cpp'; else $(CYGPATH_W) '$(srcdir)/geometry.cpp'; fi`

HF-plane.o: plane.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_CXXFLAGS) $(CXXFLAGS) -MT HF-plane.o -MD -MP -MF $(DEPDIR)/HF-plane.Tpo -c -o HF-plane.o `test -f 'plane.cpp' || echo '$(srcdir)/'`plane.cpp
	mv -f $(DEPDIR)/HF-plane.Tpo $(DEPDIR)/HF-plane.Po
#	source='plane.cpp' object='HF-plane.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_CXXFLAGS) $(CXXFLAGS) -c -o HF-plane.o `test -f 'plane.cpp' || echo '$(srcdir)/'`plane.cpp

HF-plane.obj: plane.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_CXXFLAGS) $(CXXFLAGS) -MT HF-plane.obj -MD -MP -MF $(DEPDIR)/HF-plane.Tpo -c -o HF-plane.obj `if test -f 'plane.cpp'; then $(CYGPATH_W) 'plane.cpp'; else $(CYGPATH_W) '$(srcdir)/plane.cpp'; fi`
	mv -f $(DEPDIR)/HF-plane.Tpo $(DEPDIR)/HF-plane.Po
#	source='plane.cpp' object='HF-plane.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_CXXFLAGS) $(CXXFLAGS) -c -o HF-plane.obj `if test -f 'plane.cpp'; then $(CYGPATH_W) 'plane.cpp'; else $(CYGPATH_W) '$(srcdir)/plane.cpp'; fi`

HF-PrefsManager.o: PrefsManager.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_CXXFLAGS) $(CXXFLAGS) -MT HF-PrefsManager.o -MD -MP -MF $(DEPDIR)/HF-PrefsManager.Tpo -c -o HF-PrefsManager.o `test -f 'PrefsManager.cpp' || echo '$(srcdir)/'`PrefsManager.cpp
	mv -f $(DEPDIR)/HF-PrefsManager.Tpo $(DEPDIR)/HF-PrefsManager.Po
#	source='PrefsManager.cpp' object='HF-PrefsManager.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_CXXFLAGS) $(CXXFLAGS) -c -o HF-PrefsManager.o `test -f 'PrefsManager.cpp' || echo '$(srcdir)/'`PrefsManager.cpp

HF-PrefsManager.obj: PrefsManager.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_CXXFLAGS) $(CXXFLAGS) -MT HF-PrefsManager.obj -MD -MP -MF $(DEPDIR)/HF-PrefsManager.Tpo -c -o HF-PrefsManager.obj `if test -f 'PrefsManager.cpp'; then $(CYGPATH_W) 'PrefsManager.cpp'; else $(CYGPATH_W) '$(srcdir)/PrefsManager.cpp'; fi`
	mv -f $(DEPDIR)/HF-PrefsManager.Tpo $(DEPDIR)/HF-PrefsManager.Po
#	source='PrefsManager.cpp' object='HF-PrefsManager.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_CXXFLAGS) $(CXXFLAGS) -c -o HF-PrefsManager.obj `if test -f 'PrefsManager.cpp'; then $(CYGPATH_W) 'PrefsManager.cpp'; else $(CYGPATH_W) '$(srcdir)/PrefsManager.cpp'; fi`

HF-mainOS.o: mainOS.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_CXXFLAGS) $(CXXFLAGS) -MT HF-mainOS.o -MD -MP -MF $(DEPDIR)/HF-mainOS.Tpo -c -o HF-mainOS.o `test -f 'mainOS.cpp' || echo '$(srcdir)/'`mainOS.cpp
	mv -f $(DEPDIR)/HF-mainOS.Tpo $(DEPDIR)/HF-mainOS.Po
#	source='mainOS.cpp' object='HF-mainOS.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_CXXFLAGS) $(CXXFLAGS) -c -o HF-mainOS.o `test -f 'mainOS.cpp' || echo '$(srcdir)/'`mainOS.cpp

HF-mainOS.obj: mainOS.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_CXXFLAGS) $(CXXFLAGS) -MT HF-mainOS.obj -MD -MP -MF $(DEPDIR)/HF-mainOS.Tpo -c -o HF-mainOS.obj `if test -f 'mainOS.cpp'; then $(CYGPATH_W) 'mainOS.cpp'; else $(CYGPATH_W) '$(srcdir)/mainOS.cpp'; fi`
	mv -f $(DEPDIR)/HF-mainOS.Tpo $(DEPDIR)/HF-mainOS.Po
#	source='mainOS.cpp' object='HF-mainOS.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_CXXFLAGS) $(CXXFLAGS) -c -o HF-mainOS.obj `if test -f 'mainOS.cpp'; then $(CYGPATH_W) 'mainOS.cpp'; else $(CYGPATH_W) '$(srcdir)/mainOS.cpp'; fi`

HF-surfaceDB.o: surfaceDB.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_CXXFLAGS) $(CXXFLAGS) -MT HF-surfaceDB.o -MD -MP -MF $(DEPDIR)/HF-surfaceDB.Tpo -c -o HF-surfaceDB.o `test -f 'surfaceDB.cpp' || echo '$(srcdir)/'`surfaceDB.cpp
	mv -f $(DEPDIR)/HF-surfaceDB.Tpo $(DEPDIR)/HF-surfaceDB.Po
#	source='surfaceDB.cpp' object='HF-surfaceDB.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_CXXFLAGS) $(CXXFLAGS) -c -o HF-surfaceDB.o `test -f 'surfaceDB.cpp' || echo '$(srcdir)/'`surfaceDB.cpp

HF-surfaceDB.obj: surfaceDB.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_CXXFLAGS) $(CXXFLAGS) -MT HF-surfaceDB.obj -MD -MP -MF $(DEPDIR)/HF-surfaceDB.Tpo -c -o HF-surfaceDB.obj `if test -f 'surfaceDB.cpp'; then $(CYGPATH_W) 'surfaceDB.cpp'; else $(CYGPATH_W) '$(srcdir)/surfaceDB.cpp'; fi`
	mv -f $(DEPDIR)/HF-surfaceDB.Tpo $(DEPDIR)/HF-surfaceDB.Po
#	source='surfaceDB.cpp' object='HF-surfaceDB.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_CXXFLAGS) $(CXXFLAGS) -c -o HF-surfaceDB.obj `if test -f 'surfaceDB.cpp'; then $(CYGPATH_W) 'surfaceDB.cpp'; else $(CYGPATH_W) '$(srcdir)/surfaceDB.cpp'; fi`

HF-video.o: video.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_CXXFLAGS) $(CXXFLAGS) -MT HF-video.o -MD -MP -MF $(DEPDIR)/HF-video.Tpo -c -o HF-video.o `test -f 'video.cpp' || echo '$(srcdir)/'`video.cpp
	mv -f $(DEPDIR)/HF-video.Tpo $(DEPDIR)/HF-video.Po
#	source='video.cpp' object='HF-video.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_CXXFLAGS) $(CXXFLAGS) -c -o HF-video.o `test -f 'video.cpp' || echo '$(srcdir)/'`video.cpp

HF-video.obj: video.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_CXXFLAGS) $(CXXFLAGS) -MT HF-video.obj -MD -MP -MF $(DEPDIR)/HF-video.Tpo -c -o HF-video.obj `if test -f 'video.cpp'; then $(CYGPATH_W) 'video.cpp'; else $(CYGPATH_W) '$(srcdir)/video.cpp'; fi`
	mv -f $(DEPDIR)/HF-video.Tpo $(DEPDIR)/HF-video.Po
#	source='video.cpp' object='HF-video.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_CXXFLAGS) $(CXXFLAGS) -c -o HF-video.obj `if test -f 'video.cpp'; then $(CYGPATH_W) 'video.cpp'; else $(CYGPATH_W) '$(srcdir)/video.cpp'; fi`

.m.o:
	$(OBJCCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(OBJCCOMPILE) -c -o $@ $<

.m.obj:
	$(OBJCCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(OBJCCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

HF-SDLMain.o: SDLMain.m
	$(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_OBJCFLAGS) $(OBJCFLAGS) -MT HF-SDLMain.o -MD -MP -MF $(DEPDIR)/HF-SDLMain.Tpo -c -o HF-SDLMain.o `test -f 'SDLMain.m' || echo '$(srcdir)/'`SDLMain.m
	mv -f $(DEPDIR)/HF-SDLMain.Tpo $(DEPDIR)/HF-SDLMain.Po
#	source='SDLMain.m' object='HF-SDLMain.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_OBJCFLAGS) $(OBJCFLAGS) -c -o HF-SDLMain.o `test -f 'SDLMain.m' || echo '$(srcdir)/'`SDLMain.m

HF-SDLMain.obj: SDLMain.m
	$(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_OBJCFLAGS) $(OBJCFLAGS) -MT HF-SDLMain.obj -MD -MP -MF $(DEPDIR)/HF-SDLMain.Tpo -c -o HF-SDLMain.obj `if test -f 'SDLMain.m'; then $(CYGPATH_W) 'SDLMain.m'; else $(CYGPATH_W) '$(srcdir)/SDLMain.m'; fi`
	mv -f $(DEPDIR)/HF-SDLMain.Tpo $(DEPDIR)/HF-SDLMain.Po
#	source='SDLMain.m' object='HF-SDLMain.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) \
#	$(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(HF_OBJCFLAGS) $(OBJCFLAGS) -c -o HF-SDLMain.obj `if test -f 'SDLMain.m'; then $(CYGPATH_W) 'SDLMain.m'; else $(CYGPATH_W) '$(srcdir)/SDLMain.m'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
